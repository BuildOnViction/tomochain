name: Build and test

on:
  pull_request:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup golang
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.0-rc.1' # The Go version to download (if necessary) and use.
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.53
      - name: Install golangci-lint
        run: |
          go version
          go get -u github.com/golangci/golangci-lint/cmd/golangci-lint@v1.18.0
        env:
          GOPATH: /home/runner/work/woodpecker/go
      - name: Lint code
        run: ${GOPATH}/bin/golangci-lint run --disable-all --enable=vet --enable=gofmt --enable=misspell --enable=goconst --min-occurrences=6
        env:
          GOPATH: /home/runner/work/woodpecker/go
    
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup golang
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.0-rc.1' # The Go version to download (if necessary) and use.
      - name: Build tomo
        run: go run build/ci.go install
      - name: Test tomo
        run: go run build/ci.go test -coverage
    

